<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>wslg 添加systemd 并解决can&#39;t open display 以及安装microk8s</title>
    <link href="/2021/11/04/wslg-%E6%B7%BB%E5%8A%A0systemd-%E5%B9%B6%E8%A7%A3%E5%86%B3can-t-open-display/"/>
    <url>/2021/11/04/wslg-%E6%B7%BB%E5%8A%A0systemd-%E5%B9%B6%E8%A7%A3%E5%86%B3can-t-open-display/</url>
    
    <content type="html"><![CDATA[<ol><li><code>git clone https://github.com/DamionGans/ubuntu-wsl2-systemd-script</code></li><li><code>bash ubuntu-wsl2-systemd-script.sh</code></li></ol><p>使用zsh的情况下，需要在zshrc添加<code>source /usr/sbin/start-systemd-namespace</code>，使得systemd 自动载入<br>因为引入systemd之后会把wslg的X11 的东西弄挂，需要重新连一次</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">export DISPLAY=:<span class="hljs-number">0</span><br>sudo rm -rf <span class="hljs-regexp">/tmp/</span>.X11-unix<br>ln -s <span class="hljs-regexp">/mnt/</span>wslg<span class="hljs-regexp">/.X11-unix /</span>tmp/.X11-unix<br></code></pre></td></tr></table></figure><p>之后就可以正常的<code>sudo snap install microk8s --classic</code>。</p><p>如果安装microk8s安装失败，<code>sudo apt purge snapd &amp;&amp; sudo apt install snapd</code>即可</p>]]></content>
    
    
    
    <tags>
      
      <tag>wslg</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Oracle JDK 1.8 ubuntu 安装</title>
    <link href="/2021/11/03/Oracle-JDK-1-8-ubuntu-%E5%AE%89%E8%A3%85/"/>
    <url>/2021/11/03/Oracle-JDK-1-8-ubuntu-%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<ol><li><code>sudo mkdir -p /usr/lib/jvm</code></li><li><code>sudo tar zxvf jdk-version-linux-x64.tar.gz -C /usr/lib/jvm</code></li><li><code>sudo update-alternatives --install &quot;/usr/bin/java&quot; &quot;java&quot; &quot;/usr/lib/jvm/jdk1.8.0_version/bin/java&quot; 1</code></li><li><code>sudo update-alternatives --set java /usr/lib/jvm/jdk1.8.0_version/bin/java</code></li></ol>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>cargo vendor更新依赖</title>
    <link href="/2021/10/11/cargo-vendor%E6%9B%B4%E6%96%B0%E4%BE%9D%E8%B5%96/"/>
    <url>/2021/10/11/cargo-vendor%E6%9B%B4%E6%96%B0%E4%BE%9D%E8%B5%96/</url>
    
    <content type="html"><![CDATA[<p>假设是一个git 依赖，私有源需<code>CARGO_NET_GIT_FETCH_WITH_CLI=true</code>:</p><ol><li>cargo update -p [package] –precise [commit-id]</li><li>cargo vendor</li></ol><p>非git依赖:</p><ol><li>cargo update -p [package]</li><li>cargo vendor</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>rust</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>程序员修炼之道笔记</title>
    <link href="/2021/09/06/%E7%A8%8B%E5%BA%8F%E5%91%98%E4%BF%AE%E7%82%BC%E4%B9%8B%E9%81%93%E7%AC%94%E8%AE%B0/"/>
    <url>/2021/09/06/%E7%A8%8B%E5%BA%8F%E5%91%98%E4%BF%AE%E7%82%BC%E4%B9%8B%E9%81%93%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h1><blockquote><p>第2节 - “不要把问题归咎于别人或其他什么事情上，也不要寻找借口。不要把所有问题都归咎于供应商、编程语言、管理或是同事。这些因素都可能是问题的一部分。它们的确会对解决方案造成影响，但不是给你的借口。”</p></blockquote><p>出了问题，应该优先解决问题，而不是推脱给甲乙丙丁。不利于解决问题。</p><blockquote><p>提示5 - “不要搁置“破窗”（糟糕的设计、错误的决定、低劣的代码）不去修理。每发现一个就赶紧修一个。如果没有足够的时间完全修好，那么就把它钉起来。也许你可以注释掉那些糟糕的代码，显示一行“尚未实现”的信息，或用假数据先替代一下。采取行动，预防进一步的损害发生，表明一切尽在你的掌握中。<br>……<br>你或许会觉得，没人有时间来来回回清理项目中所有的碎玻璃。如果你真这么想，劝你还是趁早多想想怎么料理这个项目的后事，或是直接离开是非之地。不要让熵赢得胜利。</p></blockquote><p>之前在某一个项目当中的惨痛经历就是为了过分的追求开发速度，关掉了ts的linter检查，导致了之后出现了大量莫名其妙的问题。最后花费了6人一天的时间去修复所有linter报的错误。还没有计算因为修复linter报错，使一些还没有merge 到主分支的 commit 产生冲突的代码的修复时间。但在之后的一段时间当中，总会有质量开始突发降低的情况。当团队决策：<code>速度 &gt;&gt;&gt; 质量</code>的时候，只能选择离开。</p><p>后面举的消防车的例子也很有意思，即使在紧急情况下，比如修复线上告警，也不要轻易的去做“破窗”的事情。例如合入更垃圾（代码质量较差，或者明显有缺陷）的代码。只要有人合入了一个垃圾代码，后面就守不住了。除了原文当中说“随大流”的情况外，还有一种就是当新来的员工，或者是刚进入这个组，由于不了解历史情况或者对代码框架本身不熟悉，就会参考历史代码。当这部分代码被复制、模仿之后（并不是所有人会认真的去阅读之前的代码，或者善意假设合入master分支的代码总是合理的），就会产生新的破窗。之后就越来越难修了。我个人平常更习惯的用语是：“我对代码有洁癖”。</p>]]></content>
    
    
    <categories>
      
      <category>读书笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>程序员修炼之道</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>修复debian testing在vmware下不能从宿主机复制粘贴的问题</title>
    <link href="/2021/08/11/%E4%BF%AE%E5%A4%8Ddebian-testing%E5%9C%A8vmware%E4%B8%8B%E4%B8%8D%E8%83%BD%E4%BB%8E%E5%AE%BF%E4%B8%BB%E6%9C%BA%E5%A4%8D%E5%88%B6%E7%B2%98%E8%B4%B4%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <url>/2021/08/11/%E4%BF%AE%E5%A4%8Ddebian-testing%E5%9C%A8vmware%E4%B8%8B%E4%B8%8D%E8%83%BD%E4%BB%8E%E5%AE%BF%E4%B8%BB%E6%9C%BA%E5%A4%8D%E5%88%B6%E7%B2%98%E8%B4%B4%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>在新版的debian testing（debian 11）中，安装vmware tools的步骤不再需要使用vmware 自带的iso进行安装，直接采用如下步骤即可完整使用复制粘贴</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">sudo apt install <span class="hljs-keyword">open</span>-<span class="hljs-keyword">vm</span>-tools <span class="hljs-keyword">open</span>-<span class="hljs-keyword">vm</span>-tools-desktop<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Vmawre</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu gnome 缩小title bar的大小</title>
    <link href="/2021/08/09/ubuntu-gnome-%E7%BC%A9%E5%B0%8Ftitle-bar%E7%9A%84%E5%A4%A7%E5%B0%8F/"/>
    <url>/2021/08/09/ubuntu-gnome-%E7%BC%A9%E5%B0%8Ftitle-bar%E7%9A%84%E5%A4%A7%E5%B0%8F/</url>
    
    <content type="html"><![CDATA[<p>ubuntu 默认gnome配置下，title bar感觉有点太大了，没必要占用那么大的空间。网上搜了下，可以改之.</p><p>以下配置来自<a href="https://github.com/JackKelly/linux_home/blob/master/.config/gtk-3.0/gtk.css">https://github.com/JackKelly/linux_home/blob/master/.config/gtk-3.0/gtk.css</a></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* From https://unix.stackexchange.com/a/343643 with modifications described in the comments */</span><br><br><span class="hljs-comment">/* shrink headerbars (don&#x27;t forget semicolons after each property) */</span><br>headerbar &#123;<br>    <span class="hljs-attribute">min-height</span>: <span class="hljs-number">0px</span>;<br>    <span class="hljs-attribute">padding-left</span>: <span class="hljs-number">2px</span>; <span class="hljs-comment">/* same as childrens vertical margins for nicer proportions */</span><br>    <span class="hljs-attribute">padding-right</span>: <span class="hljs-number">2px</span>;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#2d2d2d</span>;<br>&#125;<br><br>headerbar entry,<br>headerbar spinbutton,<br>headerbar <span class="hljs-selector-tag">button</span>,<br>headerbar separator &#123;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0px</span>; <span class="hljs-comment">/* same as headerbar side padding for nicer proportions */</span><br>&#125;<br><br><span class="hljs-comment">/* shrink ssd titlebars */</span><br><span class="hljs-selector-class">.default-decoration</span> &#123;<br>    <span class="hljs-attribute">min-height</span>: <span class="hljs-number">0</span>; <span class="hljs-comment">/* let the entry and button drive the titlebar size */</span><br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0px</span>;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#2d2d2d</span>;<br>&#125;<br><br><span class="hljs-selector-class">.default-decoration</span> <span class="hljs-selector-class">.titlebutton</span> &#123;<br>    <span class="hljs-attribute">min-height</span>: <span class="hljs-number">0px</span>; <span class="hljs-comment">/* tweak these two props to reduce button size */</span><br>    <span class="hljs-attribute">min-width</span>: <span class="hljs-number">0px</span>;<br>&#125;<br><br>window<span class="hljs-selector-class">.ssd</span> headerbar<span class="hljs-selector-class">.titlebar</span> &#123;<br>    <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">3px</span>;<br>    <span class="hljs-attribute">padding-bottom</span>: <span class="hljs-number">3px</span>;<br>    <span class="hljs-attribute">padding-right</span>: <span class="hljs-number">6px</span>;<br>    <span class="hljs-attribute">padding-left</span>: <span class="hljs-number">6px</span>;<br>    <span class="hljs-attribute">min-height</span>: <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>改完之后的效果:<br><img src="/img/screenshot-20210809-104120.png" alt="screenshot"></p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OpenSSL 证书验证cheat sheet</title>
    <link href="/2021/08/08/OpenSSL-%E8%AF%81%E4%B9%A6%E9%AA%8C%E8%AF%81cheat-sheet/"/>
    <url>/2021/08/08/OpenSSL-%E8%AF%81%E4%B9%A6%E9%AA%8C%E8%AF%81cheat-sheet/</url>
    
    <content type="html"><![CDATA[<p>记录一下自己日常开发时候用到的关于OpenSSL 常用的一些命令:</p><ol><li><p>查看证书的相关信息</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">openssl</span> x<span class="hljs-number">509</span> -in ca.pem -text -noout<br></code></pre></td></tr></table></figure></li><li><p>查看证书链的所有证书，并全部打印</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">openssl</span> crl<span class="hljs-number">2</span>pkcs<span class="hljs-number">7</span> -nocrl -certfile bundle.<span class="hljs-number">0</span>.pem | openssl pkcs<span class="hljs-number">7</span> -print_certs -text -noout<br></code></pre></td></tr></table></figure></li><li><p>命令行来验证证书链的合法性（可用于self signed certificate)</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">openssl verify -verbose -CAfile &lt;(cat <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Intermediate</span>.</span></span>pem <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">RootCert</span>.</span></span>pem) <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">UserCert</span>.</span></span>pem<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>OpenSSL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OpenSSL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>rsync 加速迁移home目录</title>
    <link href="/2021/08/05/rsync-%E5%8A%A0%E9%80%9F%E8%BF%81%E7%A7%BBhome%E7%9B%AE%E5%BD%95/"/>
    <url>/2021/08/05/rsync-%E5%8A%A0%E9%80%9F%E8%BF%81%E7%A7%BBhome%E7%9B%AE%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<p>最近经常需要去迁移home目录，所以记录一下快速迁移home路径使用的命令：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">rsync -e <span class="hljs-string">&quot;ssh -p port&quot;</span> -avAXEWSlHh <span class="hljs-params">--exclude=dir1</span> <span class="hljs-string">/source</span> <span class="hljs-string">/destination</span> <span class="hljs-params">--no-compress</span> <span class="hljs-params">--info=progress2</span> <span class="hljs-params">--dry-run</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>修复阿米洛键盘在linux下fn键自动生效的问题</title>
    <link href="/2021/08/01/%E4%BF%AE%E5%A4%8D%E9%98%BF%E7%B1%B3%E6%B4%9B%E9%94%AE%E7%9B%98%E5%9C%A8linux%E4%B8%8Bfn%E9%94%AE%E8%87%AA%E5%8A%A8%E7%94%9F%E6%95%88%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <url>/2021/08/01/%E4%BF%AE%E5%A4%8D%E9%98%BF%E7%B1%B3%E6%B4%9B%E9%94%AE%E7%9B%98%E5%9C%A8linux%E4%B8%8Bfn%E9%94%AE%E8%87%AA%E5%8A%A8%E7%94%9F%E6%95%88%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>换上阿米洛键盘之后，发现在linux下fn 键自动锁定了，导致F1-F12的键都不能用了，很不方便。因为我F12键绑定了yakuake了。然后想用evtest把scan code读出来，然后自己修改（<a href="https://www.bilibili.com/read/cv5156572">可以这篇文章</a>）。发现第一排键没有scan code……尴尬。。</p><p>后来在继续搜索的时候，发现可能被识别成apple 键盘了，导致fn 被锁定。于是直接做如下修改：</p><p>临时（重启之后会失效）:</p><p>禁用fn （也就是变成fn+f键触发对应的效果）</p><p><code>echo 0 | sudo tee /sys/module/hid_apple/parameters/fnmode</code></p><p>启用fn：</p><p><code>echo 1 | sudo tee /sys/module/hid_apple/parameters/fnmode</code></p><p>永久：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">echo</span> <span class="hljs-keyword">options</span> hid_apple fnmode=<span class="hljs-number">0</span> | sudo tee -<span class="hljs-keyword">a</span> /etc/modprobe.d/hid_apple.<span class="hljs-keyword">conf</span><br>sudo <span class="hljs-keyword">update</span>-initramfs -<span class="hljs-keyword">u</span> -<span class="hljs-keyword">k</span> <span class="hljs-keyword">all</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
